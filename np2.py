import streamlit as st
from openai import OpenAI
import os
import io
from docx import Document
from docx.shared import Pt

# ========== CONFIGURA√á√ÉO DA API ==========
api_key_env = os.getenv("OPENAI_API_KEY")

st.set_page_config(page_title="NutriChef Pro", page_icon="ü•¶")
st.image("NIDUp.png", width=250, caption="N√∫cleo de Intelig√™ncia de Dados")

st.title("ü•¶ NutriChef Pro ‚Äì Receita inteligente com IA")

if not api_key_env:
    st.warning("üîê Sua chave da OpenAI n√£o foi encontrada no ambiente.")
    api_key_input = st.text_input("Insira sua chave da OpenAI aqui para continuar:", type="password")
    if not api_key_input:
        st.stop()
    client = OpenAI(api_key=api_key_input)
else:
    client = OpenAI(api_key=api_key_env)

st.markdown("**Preencha o formul√°rio para receber sua receita personalizada!**")

# ========== FORMUL√ÅRIO ==========
with st.form("form_receita"):
    nome = st.text_input("Seu nome (opcional)", "")
    objetivo = st.selectbox("Objetivo principal:", ["Hipertrofia", "Cutting", "Endurance", "Manuten√ß√£o"])
    fase = st.selectbox("Fase do treino:", ["Bulk", "Defini√ß√£o", "Manuten√ß√£o", "N√£o sei"])
    dieta = st.selectbox("Estilo alimentar:", ["Tradicional", "Low-carb", "Vegana", "Vegetariana", "Outra"])
    restricoes = st.multiselect("Restri√ß√µes alimentares:", ["Sem lactose", "Sem gl√∫ten", "N√£o consumo ovos", "Nenhuma"])

    equipamentos_lista = ["Fog√£o", "Micro-ondas", "Airfryer", "Liquidificador", "Forno", "S√≥ preparo frio"]
    equipamentos_selecao = st.multiselect("Equipamentos dispon√≠veis:", ["Todos"] + equipamentos_lista)

    if "Todos" in equipamentos_selecao:
        equipamentos_selecao = equipamentos_lista

    tempo = st.selectbox("Tempo dispon√≠vel para cozinhar:", ["At√© 10 minutos", "At√© 20 minutos", "At√© 30 minutos", "Tempo livre"])
    refeicao = st.selectbox("Tipo de refei√ß√£o:", ["Caf√© da manh√£", "Almo√ßo", "Pr√©-treino", "P√≥s-treino", "Jantar", "Aleat√≥ria"])
    preferencia = st.text_input("Algum alimento que ama ou quer evitar?", "")
    dica = st.radio("Deseja uma dica de performance com a receita?", ["Sim", "N√£o"])

    enviar = st.form_submit_button("üîç Gerar Receita")

# ========== GERA√á√ÉO COM IA ==========
if enviar:
    restricoes_str = ", ".join(restricoes) if restricoes else "Nenhuma"
    equipamentos_str = ", ".join(equipamentos_selecao) if equipamentos_selecao else "N√£o informado"

    prompt = f"""
Voc√™ √© um nutricionista esportivo especializado em alimenta√ß√£o de performance.
Gere uma receita simples e pr√°tica com base nas informa√ß√µes abaixo:

Usu√°rio: {nome or 'Usu√°rio'}
Objetivo: {objetivo}
Fase do treino: {fase}
Estilo alimentar: {dieta}
Restri√ß√µes: {restricoes_str}
Equipamentos: {equipamentos_str}
Tempo dispon√≠vel: {tempo}
Tipo de refei√ß√£o: {refeicao}
Prefer√™ncias: {preferencia or 'Nenhuma'}
Deseja dica de performance? {dica}

Formato da resposta:
1. Nome da receita
2. Objetivo declarado
3. Tempo de preparo
4. Ingredientes com quantidades
5. Modo de preparo passo a passo
6. Macros estimados (prote√≠na, carboidrato, gordura, calorias)
7. Dica extra (se solicitado)

Seja simples, direto e pr√°tico. Use alimentos comuns no Brasil e foque em performance.
"""

    with st.spinner("Gerando sua receita com IA... üç≥"):
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Voc√™ √© um nutricionista funcional especializado em nutri√ß√£o esportiva personalizada."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.7,
            max_tokens=1000
        )
        resposta = response.choices[0].message.content

    st.markdown("---")
    st.subheader("üçΩÔ∏è Receita NutriChef Pro:")
    st.markdown(resposta)

    # ========== GERAR RELAT√ìRIO EM .DOCX ==========
    doc = Document()
    doc.add_heading("Receita NutriChef Pro", level=1)
    for linha in resposta.split("\n"):
        if linha.strip():
            paragrafo = doc.add_paragraph()
            paragrafo.add_run(linha.strip()).font.size = Pt(11)

    buffer = io.BytesIO()
    doc.save(buffer)
    buffer.seek(0)

    st.download_button(
        label="üì• Baixar receita como .docx",
        data=buffer,
        file_name="Receita_NutriChef_Pro.docx",
        mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document"
    )

    # ========== CHAMADA PARA FUNIL ==========
    st.markdown("---")
    st.success("üí° Curtiu a receita?")
    st.markdown("Receba um plano completo de 3 ou 7 dias com IA:")
    col1, col2 = st.columns(2)
    with col1:
        st.link_button("üìÖ Plano de 3 dias", "https://seulink.com/plano3")
    with col2:
        st.link_button("üî• Quero o PRO+ 7 dias", "https://seulink.com/assinatura")
